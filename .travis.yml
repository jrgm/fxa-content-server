language: node_js

node_js:
  - "0.10"

env:
  global:
    # Sauce Labs are OK with this and it is currently necessary to expose this information for testing pull requests;
    # please get your own free key if you want to test yourself
    - SAUCE_USERNAME: fxa-content
    - SAUCE_ACCESS_KEY: ee5354a4-3d5e-47a0-84b0-0b7aaa12a720
    - DISABLE_ROUTE_LOGGING: true

# daemontools is installed to get tai64nlocal timestamping
before_install:
  - sudo apt-get install libgmp3-dev daemontools

install:
  # install everything for full dev in the fxa-content-server.
  - npm install --silent
  # copy over the configuration that can be used to start the server.
  - cp server/config/local.json-dist server/config/local.json
  - grunt l10n-create-json
  # install the resources necessary for the auth server.
  - npm install --silent git://github.com/mozilla/fxa-auth-server.git
  - cd node_modules/fxa-auth-server
  - node ./scripts/gen_keys.js
  - LOG_LEVEL=error npm start 2>&1 | tai64n | tai64nlocal &>/tmp/fxa-auth-server.log &
  - cd ../..
  - npm start 2>&1 | tai64n | tai64nlocal &> /tmp/fxa-content-server.log &

# now run the tests!
script: 
  - (grunt validate-shrinkwrap && grunt lint && npm run-script test-server && npm run-script test-remote) | tai64n | tai64nlocal

after_failure:
  - echo ~*~ On failure, here are the webserver logs
  - echo ~*~ /tmp/fxa-auth-server.log
  - cat /tmp/fxa-auth-server.log
  - echo ~*~ /tmp/fxa-content-server.log
  - cat /tmp/fxa-content-server.log

after_success:
  - echo ~*~ all tests pass
  - echo ~*~ /tmp/fxa-auth-server.log
  - cat /tmp/fxa-auth-server.log
  - echo ~*~ /tmp/fxa-content-server.log
  - cat /tmp/fxa-content-server.log
